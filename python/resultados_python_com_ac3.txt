Resultados Python com AC-3

Fácil: 

_________ Verificando o JSON: facil.json __________

JSON:

-- Overais (ratings) --
  J1: 72
  J2: 74
  J3: 74
  J4: 71
  J5: 72

-- Domínios (times permitidos) --
  J1: ['T1', 'T2']
  J2: ['T1', 'T2']
  J3: ['T1', 'T2']
  J4: ['T1', 'T2']
  J5: ['T1']

-- Posições --
  J1: atacante
  J2: zagueiro
  J3: meia
  J4: goleiro
  J5: lateral

-- Restrições --
  C1: {j | Vj=T1}| = |{j | Vj=T2}| +- 1
  C2: V1 != V2
  C3: V3 = V4
  C4: Minimo 2 jogadores por time
  C5: V5 != T2
  C6: Se V3 = V4 = T1 entao V1 = T2


-- Verificando restrições --

Rodando solver COM AC-3 (pré-processamento), MRV e LCV...

=== Resultados COM AC-3 (pré) ===
Impacto do AC-3 nos domínios: Tamanho médio de 1.80 -> 1.80
Tempo total: 0.00200510 s | Pré-processamento: 0.00000000 s | Busca: 0.00100255 s
Nós testados: 13 | Retrocessos: 2
Soluções encontradas: 2

--- Solução 1 (COM AC-3) ---
  J1: T1
  J2: T2
  J3: T2
  J4: T2
  J5: T1

--- Solução 2 (COM AC-3) ---
  J1: T2
  J2: T1
  J3: T2
  J4: T2
  J5: T1


Médio:

_________ Verificando o JSON: medio.json __________

JSON:

-- Overais (ratings) --
  J1: 70
  J2: 74
  J3: 76
  J4: 72
  J5: 72

-- Domínios (times permitidos) --
  J1: ['T1', 'T2']
  J2: ['T1', 'T2']
  J3: ['T1', 'T2']
  J4: ['T1', 'T2']
  J5: ['T1']

-- Posições --
  J1: atacante
  J2: atacante
  J3: meia
  J4: goleiro
  J5: goleiro

-- Restrições --
  C1: {j | Vj=T1}| = |{j | Vj=T2}| +- 1
  C2: V1 != V2
  C3: V3 = V4
  C4: Minimo 2 jogadores por time
  C5: V5 != T2
  C6: Se V3 = V4 = T1 entao V1 = T2
  C7: Jogadores na mesma posicao nao podem estar no mesmo time (opcional)


-- Verificando restrições --

Rodando solver COM AC-3 (pré-processamento), MRV e LCV...

=== Resultados COM AC-3 (pré) ===
Impacto do AC-3 nos domínios: Tamanho médio de 1.80 -> 1.40
Tempo total: 0.00000000 s | Pré-processamento: 0.00000000 s | Busca: 0.00000000 s
Nós testados: 7 | Retrocessos: 0
Soluções encontradas: 2

--- Solução 1 (COM AC-3) ---
  J1: T1
  J2: T2
  J3: T2
  J4: T2
  J5: T1

--- Solução 2 (COM AC-3) ---
  J1: T2
  J2: T1
  J3: T2
  J4: T2
  J5: T1


Difícil: 

_________ Verificando o JSON: dificil.json __________

JSON:

-- Overais (ratings) --
  J1: 82
  J2: 74
  J3: 80
  J4: 78
  J5: 85

-- Domínios (times permitidos) --
  J1: ['T1', 'T2']
  J2: ['T1', 'T2']
  J3: ['T1', 'T2']
  J4: ['T1', 'T2']
  J5: ['T1']

-- Posições --
  J1: volante
  J2: ponta
  J3: meia
  J4: meia
  J5: volante

-- Restrições --
  C1: {j | Vj=T1}| = |{j | Vj=T2}| +- 1
  C2: V1 != V2
  C3: V3 = V4
  C4: Minimo 2 jogadores por time
  C5: V5 != T2
  C6: Se V3 = V4 = T1 entao V1 = T2
  C7: Jogadores na mesma posicao nao podem estar no mesmo time (opcional)
  C8: Media de overais por time nao pode ultrapassar limite (opcional)

-- Limite de força (C8): 80 --


-- Verificando restrições --

Rodando solver COM AC-3 (pré-processamento), MRV e LCV...

=== Resultados COM AC-3 (pré) ===
Impacto do AC-3 nos domínios: Tamanho médio de 1.80 -> 1.40
Tempo total: 0.00000000 s | Pré-processamento: 0.00000000 s | Busca: 0.00000000 s
Nós testados: 7 | Retrocessos: 2
Soluções encontradas: 0